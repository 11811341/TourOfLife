{"version":3,"sources":["./src/app/components/TourOfLife/TourOfLife.component.ts","./src/app/components/TourOfLife/TourOfLife.component.html","./src/app/components/Life2D/Life2D.component.ts","./src/app/components/Life2D/Life2D.component.html","./src/environments/environment.ts","./src/app/Renderer2D.ts","./src/app/Cell2D.ts","./src/app/Renderer3D.ts","./src/app/Cell3D.ts","./src/app/Grid2D.ts","./src/app/Life2DContainer.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/Grid3D.ts","./src/app/components/Life3D/Life3D.component.ts","./src/app/components/Life3D/Life3D.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {Life2DContainer} from '../../Life2DContainer';\r\n\r\nimport lesson_lexicon from '../../../assets/lesson_lexicon.json';\r\n\r\n\r\n@Component({\r\n  selector: 'tour-of-life',\r\n  templateUrl: './TourOfLife.component.html',\r\n  styleUrls: ['./TourOfLife.component.css']\r\n})\r\nexport class TourOfLifeComponent implements OnInit {\r\n\r\n  active_a: Life2DLesson;\r\n  active_b: Life2DLesson;\r\n\r\n  running_a: boolean = false;\r\n  running_b: boolean = false;\r\n\r\n  lessons = lesson_lexicon;\r\n\r\n  private selected: number = 0;\r\n\r\n  ngOnInit(): void {\r\n    // const that = this;\r\n    //\r\n    // document.addEventListener(\"DOMContentLoaded\", function() {\r\n    //   console.log(\"all loaded\");\r\n    //   that.onTabClick(0);\r\n    // },false);\r\n\r\n\r\n    this.lessonSetup();\r\n\r\n  }\r\n\r\n  private lessonSetup(){\r\n    const parent = document.getElementById(\"tab_group\");\r\n    // console.log(parent.innerHTML);\r\n    // parent.innerHTML +=\r\n    //   '<mat-tab label=\"GoL: Basics 01\">' +\r\n    //   'test' +\r\n    //   '</mat-tab>';\r\n    // console.log(parent.innerHTML);\r\n  }\r\n\r\n  onTabClick(idx:number){\r\n    if(idx==0)\r\n      return;\r\n\r\n    this.selected = idx-1;\r\n\r\n    // if(this.active_a != null){\r\n    //   this.active_a.closeContext();\r\n    //   this.active_a = null;\r\n    // }\r\n    // if(this.active_b != null){\r\n    //   this.active_b.closeContext();\r\n    //   this.active_b = null;\r\n    // }\r\n\r\n    document.getElementById(idx+\"lesson0\").innerHTML = null;\r\n    document.getElementById(idx+\"lesson1\").innerHTML = null;\r\n    this.active_a = new Life2DLesson(idx+\"lesson0\");\r\n    this.active_b = new Life2DLesson(idx+\"lesson1\");\r\n\r\n    this.active_a.setDefaultZoom(lesson_lexicon[this.selected].lessons[0].min_zoom, lesson_lexicon[this.selected].lessons[0].max_zoom, lesson_lexicon[this.selected].lessons[0].def_zoom);\r\n    this.active_b.setDefaultZoom(lesson_lexicon[this.selected].lessons[1].min_zoom, lesson_lexicon[this.selected].lessons[1].max_zoom, lesson_lexicon[this.selected].lessons[1].def_zoom);\r\n\r\n    this.active_a.setSpeed(lesson_lexicon[this.selected].lessons[0].speed);\r\n    this.active_b.setSpeed(lesson_lexicon[this.selected].lessons[1].speed);\r\n\r\n    if(!lesson_lexicon[this.selected].lessons[0].lesson)\r\n      this.active_a.maxCells(lesson_lexicon[this.selected].lessons[0].placeable + lesson_lexicon[this.selected].lessons[0].cell_layout.length-1);\r\n    if(!lesson_lexicon[this.selected].lessons[1].lesson)\r\n      this.active_b.maxCells(lesson_lexicon[this.selected].lessons[1].placeable + lesson_lexicon[this.selected].lessons[1].cell_layout.length-1);\r\n\r\n    this.reset(0);\r\n    this.reset(1);\r\n\r\n    if(lesson_lexicon[this.selected].lessons[0].cell_layout.length == 0 && lesson_lexicon[this.selected].lessons[0].lesson) {\r\n      let el = document.getElementById(idx + \"lesson0\");\r\n      el.parentNode.removeChild(el);\r\n    }\r\n    if(lesson_lexicon[this.selected].lessons[1].cell_layout.length == 0 && lesson_lexicon[this.selected].lessons[1].lesson) {\r\n      let el = document.getElementById(idx + \"lesson1\");\r\n      el.parentNode.removeChild(el);\r\n    }\r\n\r\n  }\r\n\r\n  predictionMode(idx:number){\r\n    idx==0?this.active_a.predictionMode():this.active_b.predictionMode();\r\n  }\r\n  revert(idx:number){\r\n    idx==0?this.active_a.revert():this.active_b.revert();\r\n  }\r\n  play(idx:number){\r\n    console.log(idx);\r\n    if(idx==0){\r\n      this.active_a.play();\r\n      this.running_a = !this.running_a;\r\n    }else{\r\n      this.active_b.play();\r\n      this.running_b = !this.running_b;\r\n    }\r\n  }\r\n  advance(idx:number){\r\n    idx==0?this.active_a.advance():this.active_b.advance();\r\n  }\r\n  reset(idx:number){\r\n    if(idx==0){\r\n      if(this.active_a.prediction_mode)\r\n        this.active_a.predictionMode();\r\n      this.active_a.resetCells(lesson_lexicon[this.selected].lessons[0].cell_layout);\r\n      if(lesson_lexicon[this.selected].lessons[0].repeated.length!=0)\r\n        this.active_a.setRepeating(lesson_lexicon[this.selected].lessons[0].repeated);\r\n      this.active_a.devMode();\r\n      this.active_a.devMode();\r\n      if(this.running_a)\r\n        this.play(idx);\r\n    }else{\r\n      if(this.active_b.prediction_mode)\r\n        this.active_b.predictionMode();\r\n      this.active_b.resetCells(lesson_lexicon[this.selected].lessons[1].cell_layout);\r\n      if(lesson_lexicon[this.selected].lessons[1].repeated.length!=0)\r\n        this.active_b.setRepeating(lesson_lexicon[this.selected].lessons[1].repeated);\r\n      this.active_b.devMode();\r\n      this.active_b.devMode();\r\n      if(this.running_b)\r\n        this.play(idx);\r\n    }\r\n  }\r\n}\r\n\r\nclass Life2DLesson extends Life2DContainer{\r\n\r\n  setDefaultZoom(min_zoom: number, max_zoom: number, def_zoom: number){\r\n    this.renderer.setZoom(min_zoom, max_zoom, def_zoom);\r\n  }\r\n\r\n  resetCells(cells: any[]){\r\n    this.clear();\r\n    for(let c of cells)\r\n      this.generate_cell(c[0], c[1], true);\r\n  }\r\n\r\n  // method to close webgl context\r\n  // closeContext(){\r\n  //   this.renderer.closeContext();\r\n  // }\r\n\r\n  maxCells(count: number){\r\n    this.grid.maxCells(count);\r\n  }\r\n}\r\n","<div class=\"lesson_page\">\r\n  <mat-tab-group id=\"tab_group\" (selectedTabChange)=\"onTabClick($event.index)\">\r\n    <mat-tab label=\"Intro: GoL\">\r\n      <h1>Introduction: Game of Life</h1>\r\n      <br>\r\n      <p>Welcome to the tutorial part of the Game of Life experience, the so-called Tour of Life. </p>\r\n      <br>\r\n      <p>Here, you will learn from the ground up, the core principles of the Game of Life, as first imagined by the late English mathematician John Horton Conway in 1970. You will slowly work your way through a set of lessons and exercises, designed to teach you everything, from the very basic rules of Life, to some of the most complex patterns found within it.\r\n        By the end of the tutorial, you will hopefully feel confident in predicting the developments of small cell clusters inside the Game of Life, be able to create some of the important patterns on your own, and you will even dip your toes into the world of computer logic.\r\n      </p>\r\n      <p>The Game of Life is often described as a zero player game, because the only input from the user happens at the very start, where they choose an initial cell configuration. After that, the simulation is run and the \"player\" can all but watch.\r\n          To get a little bit more technical, Life is a so-called cellular automaton. This is basically a grid of cells, each having a state. Cells inside this grid can only exist in a certain number of states, which they switch between. The number/type of states a cell can \"inhabit\" depends on the automaton.\r\n          The cells in the Game of Life basically have only two states. Dead or alive.</p>\r\n      <p>Each cell has a specific neighborhood, based on which it transitions between states. This is the basic principle behind the evolution of a cellular automaton.</p>\r\n      <br>\r\n      <p>The tour of Life was designed as a highly interactive experience. This means, that in order for you to get the most out of it, you should be as curious as possible, and interact with the lesson presented to you as much as you can. Some lessons come in the form of an exercise, where you will even be asked to complete a pattern yourself, to really test your skills. However even for non-exercise type lessons, you can still interact with the simulation in numerous ways, which should help you understand the concepts even better.</p>\r\n      <p>Each chapter is split into 2 lessons. Exercises are marked as such in the header, and you will know that a given lesson is an exercise, by the indicator of how many cells you are allowed to place on the grid.\r\n          Each lesson contains such a simulation grid, where the discussed pattern (or combination of patterns) will be shown, and a description of it. Be sure to check out the description before messing with the simulation for the optimal learning experience.\r\n          Under the simulation grid, there is a set of controls that let you influence the simulation. Hover over them with the mouse for a brief explanation.\r\n      </p>\r\n      <p>In addition to the basic simulation controls for pause/play, skip forward/backward, or the button for restoring the simulation to it's initial state, you have the icon in the shape of the letter \"i\", which will lead you to an external resource that contains more information on the currently discussed topic.\r\n          The eye icon is the prediction mode you can also find in the 2D Sandbox. It will give you a preview of what will happen to each cell in the next epoch. <br>The color coding is as follows:</p>\r\n      <p id=\"overpopulation\">This cell will die due to overpopulation</p>\r\n      <p id=\"underpopulation\">This cell will die due to underpopulation</p>\r\n      <p id=\"birth\">This cell will be born due to reproduction</p>\r\n      <p id=\"survival\">This cell survives, unaffected</p>\r\n      <p>The last unexplained icon, the pencil, copies the pattern from the lesson into the sandbox, for you to use all it's tools to properly examine it. You should really explore and get used to all of these options, as they will greatly improve your experience with the lessons.</p>\r\n      <p>For the initial exercises, the zoom on the camera is locked, to force you to focus on the pattern being introduced to you. This will change as you go on. The zoom settings and restrictions have been carefully chosen to not make the simulator unwieldy inside the lesson environment, and also to direct your attention to the important parts.\r\n          If you haven't found it out for yourself already, you can use the middle mouse button to pan the camera around, and the mouse wheel allows you to zoom in or out, if the lesson permits it.\r\n          By left-clicking with (and/or dragging) the mouse on any empty space, you can create a cell in it's place. Using the right-click lets you delete a cell. </p>\r\n      <br>\r\n      <p>With this in mind, you should now be fully equipped to tackle your first lesson. Use the lesson navigation at the top of the screen to select it. And don't worry, if you ever get stuck, there are some hints placed around the Tour of Life that should help you out.</p>\r\n      <p>Have fun!</p>\r\n    </mat-tab>\r\n\r\n    <mat-tab *ngFor=\"let tab of lessons; let i = index\" label=\"{{tab.header}}\">\r\n      <ng-template matTabContent>\r\n        <h1>{{tab.chapter}}</h1>\r\n        <div class=\"lessons\">\r\n          <mat-card class=\"lesson_container\" [class.mat-elevation-z8]=\"true\" *ngFor=\"let l of tab.lessons; let idx = index\">\r\n            <ng-container>\r\n              <div class=\"renderer\" id=\"{{i+1+'lesson'+idx}}\"></div>\r\n              <div class=\"controls_container\" *ngIf=\"!(l.cell_layout.length == 0 && l.lesson)\">\r\n                <div class=\"controls\">\r\n                  <a mat-icon-button color=\"primary\"\r\n                          matTooltip=\"Wiki reference\" matTooltipPosition=\"above\"\r\n                          href=\"{{l.reference}}\">\r\n                    <mat-icon>\r\n                      info\r\n                    </mat-icon>\r\n                  </a>\r\n                  <button mat-icon-button color=\"primary\" matTooltip=\"Toggle prediction mode\"\r\n                          matTooltipPosition=\"above\" (click)=\"predictionMode(idx)\">\r\n                    <mat-icon>\r\n                      visibility\r\n                    </mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"primary\"\r\n                          matTooltip=\"Go back by one epoch\" matTooltipPosition=\"above\" (click)=\"revert(idx)\">\r\n                    <mat-icon>\r\n                      skip_previous\r\n                    </mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"primary\" matTooltip=\"Play/Pause the Game\"\r\n                          matTooltipPosition=\"above\" (click)=\"play(idx)\">\r\n                    <mat-icon *ngIf=\"(idx==0&&!running_a)||(idx==1&&!running_b)\">\r\n                      play_arrow\r\n                    </mat-icon>\r\n                    <mat-icon *ngIf=\"(idx==0&&running_a)||(idx==1&&running_b)\">\r\n                      pause\r\n                    </mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"primary\"\r\n                          matTooltip=\"Advance the game by one epoch\" matTooltipPosition=\"above\"\r\n                          (click)=\"advance(idx)\">\r\n                    <mat-icon>\r\n                      skip_next\r\n                    </mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"primary\"\r\n                          matTooltip=\"Reset the board\" matTooltipPosition=\"above\"\r\n                          (click)=\"reset(idx)\">\r\n                    <mat-icon>\r\n                      replay\r\n                    </mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"primary\"\r\n                          matTooltip=\"Edit in Life2D\" matTooltipPosition=\"above\"\r\n                          routerLink=\"/life2d/{{i + ';' + idx}}\">\r\n                    <mat-icon>\r\n                      edit\r\n                    </mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"explanation\">\r\n                <ng-container *ngIf=\"!l.lesson\">\r\n                  <h3 style=\"margin-top: -1em\">Placeable cells: {{l.placeable}}</h3>\r\n                </ng-container>\r\n                <h2>{{l.title}}</h2>\r\n                {{l.description}}\r\n              </div>\r\n            </ng-container>\r\n          </mat-card>\r\n        </div>\r\n        <div id=\"chapter_tip\" *ngIf=\"tab.hint\">\r\n          <h3 style=\"font-weight: bold; margin-right: 1em;\">Chapter hint:</h3><p>{{tab.hint}}</p>\r\n        </div>\r\n\r\n      </ng-template>\r\n\r\n    </mat-tab>\r\n\r\n\r\n    <mat-tab label=\"Touring Machine\">\r\n      <h1>Touring Machine</h1>\r\n      <br>\r\n      <p>The term \"Turing Machine\" or something being \"Turing complete\" has been mentioned a couple times already throughout the past lessons. Before we move on to the final couple chapters of this tour, it should probably be cleared up.</p>\r\n      <p>Named after the British mathematician, and father of the modern computer, Alan Turing, it is an abstract model of a machine, that can simulate any given algorithm, despite it's apparent simplicity. In this way, it's description is not too dissimilar from the one you were given to the Game of Life.\r\n         A Turing machine is generally thought of as having an infinitely long input tape, that binary values can be either read from, or printed to. Using simple instructions and binary \"calculations\", it is thus possible, given enough time, to simulate an algorithm of arbitrary complexity. </p>\r\n      <p>When a system is deemed Turing complete, it simply means, that it's capable of simulating a Turing machine. It's therefore possible for a Turing complete system to simulate all tasks accomplishable by general modern computers.</p>\r\n      <p>You've already heard, and seen proof, that the Game of Life is Turing complete. Or at least, that components can be simulated within Life, that make it so. This might lead you to the question: \"Can I actually build a real computer inside Life?\"\r\n          Naturally, by nature of it's Turing completeness, this can, and has been done. A fully fledged, 8-Bit programmable computer, complete with the Arithmetic and Logic Unit (ALU, part of a CPU that carries out arithmetic and logic operations), Memory and even a display.\r\n          It was made by Nicolas Loizeau, and you can properly examine it <a href=\"https://www.nicolasloizeau.com/gol-computer\">here</a>. If you have been properly following the last few exercises, you might recognize his website, as it heavily influenced the form of the logic gates you have been presented with.\r\n          Big thanks to Nicolas!</p>\r\n      <br>\r\n      <img src=\"../../../assets/computer_in_life.jpg\" alt=\"Programmable computer in the Game of Life by Nicolas Loizeau\" style=\"width: 50%;height: 30em;margin-left: 25%\">\r\n      <br>\r\n      <br>\r\n      <p>If we take it one step further, we could also say, that the Game of Life is not only a Turing machine, but a universal Turing machine. Where a standard Turing machine is capable of simulating any arbitrary algorithm, you would have to create a specific machine for each algorithm you are trying to simulate.\r\n          The universal Turing machine however takes the standard input tape you know from it's less advanced sibling, along with a description of a machine that would solve a certain problem. With this, the universal Turing machine can simulate the input machine and using the content of the tape, simulate it, and with it the algorithm itself.\r\n          A universal Turing machine can simulate any other machine, and so can the Game of Life.</p>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Recursion\">\r\n      <h1>Recursion</h1>\r\n      <br>\r\n      <p>The fact that you can build a computer inside the Game of Life might not seem very interesting to you at the moment. After all, there are countless Turing complete systems, and thousands of examples all over the internet, of people, building simple computers out of the most bizarre things.</p>\r\n      <p>For example, and you might be surprised to learn this, the trading card game Magic: The gathering is also technically considered Turing complete. Meaning, using a certain subset of the total cards, the rules of the game allow for a Turing machine to be constructed.\r\n      Funnily enough, this means that you could build a computer out of MTG cards, that would itself be capable of playing MTG.</p>\r\n      <p>Another, more common example is the game Minecraft. You have probably seen hundreds of videos online of people building computers inside the game. Granted, it is a fair bit easier to construct something resembling a computer inside the game, since it already includes a lot of the necessary building blocks out of the box, without a need for abstraction.</p>\r\n      <p>These are examples of what's called unintentional Turing completeness. The creator of Magic: The gathering (although he was a mathematician), or the developer of Minecraft did not set out to create a Turing complete system within their games. It just sort of happened.\r\n      The same goes for John Conway and the Game of Life who did not initially set out to create a Turing machine. </p>\r\n      <br>\r\n      <br>\r\n      <p>If you think about it, what you are doing right now is using the computer to simulate Life. The sandbox, or even the lessons are not recordings, but the actual Game of Life being computed in real time.\r\n          And as you have just found out, you can simulate a computer inside the Game of Life. Where does that lead you?</p>\r\n      <p>Yes. Probably the most interesting feature of the Game of Life, stemming from the fact that it is Turing complete, is that you can build a Turing machine, that can run Life itself.\r\n          You can therefore simulate the Game of Life, inside the actual Game of Life. This might be a bit difficult to imagine. Why don't you move on to the last chapter of this tutorial, and see for yourself, what this actually means and looks like.</p>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Life inside Life\">\r\n      <h1>The Game of Life simulated within the Game of Life</h1>\r\n      <video controls width=\"100%\" style=\"margin-top: 1em; margin-bottom: 1em\">\r\n\r\n        <source src=\"../../../assets/life_in_life.mp4\"\r\n                type=\"video/mp4\">\r\n\r\n        Sorry, your browser doesn't support embedded videos.\r\n      </video>\r\n      <p>This screen capture depicts the oscillator pattern known as Blinker being simulated within Life itself. This simulation would be too costly to do in real time inside a web application, therefore only a video has been provided as a sort of \"proof of concept\". The actual simulation was done in a program called <a href=\"http://golly.sourceforge.net/\">Golly</a>, using a python script shipped with it, called metafier.py</p>\r\n    </mat-tab>\r\n\r\n\r\n  </mat-tab-group>\r\n  <!--  <div class=\"next_prev\">-->\r\n  <!--    <button mat-icon-button>-->\r\n  <!--      <mat-icon>keyboard_arrow_left</mat-icon>-->\r\n  <!--    </button>-->\r\n  <!--    <button mat-icon-button>-->\r\n  <!--      <mat-icon>keyboard_arrow_right</mat-icon>-->\r\n  <!--    </button>-->\r\n  <!--  </div>-->\r\n\r\n\r\n\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Life2DContainer} from '../../Life2DContainer';\r\n\r\nimport lesson_lexicon from '../../../assets/lesson_lexicon.json';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {camelize} from 'tslint/lib/utils';\r\n\r\n\r\n@Component({\r\n  selector: 'life-2d',\r\n  templateUrl: './Life2D.component.html',\r\n  styleUrls: ['./Life2D.component.css']\r\n})\r\nexport class Life2DComponent implements OnInit{\r\n\r\n  life2DContainer: Life2DContainer;\r\n\r\n  constructor(private params:ActivatedRoute) {}\r\n\r\n  ngOnInit(): void{\r\n    console.log(\"test\");\r\n    this.life2DContainer = new Life2DContainer(\"render_window\");\r\n    const url = this.params.snapshot.paramMap.get('config');\r\n    if(url && url.match(\"\\d*;\\d*\")){\r\n      let chapter = url.split(\";\")[0];\r\n      let lesson = url.split(\";\")[1];\r\n      if(lesson_lexicon[parseInt(chapter)] && lesson_lexicon[parseInt(chapter)].lessons[parseInt(lesson)]) {\r\n        let cells = lesson_lexicon[parseInt(chapter)].lessons[parseInt(lesson)].cell_layout;\r\n        for (let c of cells)\r\n          this.life2DContainer.generate_cell(c[0], c[1], true);\r\n        if(lesson_lexicon[parseInt(chapter)].lessons[parseInt(lesson)].repeated.length!=0){\r\n          this.life2DContainer.setRepeating(lesson_lexicon[parseInt(chapter)].lessons[parseInt(lesson)].repeated);\r\n        }\r\n      }\r\n    }\r\n    const that = this;\r\n    window.addEventListener(\"click\", function(e){\r\n      if(that.life2DContainer.getLegend())\r\n        that.life2DContainer.toggleLegend();\r\n    },false);\r\n\r\n  }\r\n\r\n  inputImage(){\r\n    document.getElementById('file_picker').click();\r\n  }\r\n\r\n  loadImage(e){\r\n\r\n    this.life2DContainer.clear();\r\n\r\n    let img = new Image();\r\n    let canvas = document.createElement('canvas');\r\n    let context = canvas.getContext(\"2d\");\r\n    document.getElementById(\"test\").appendChild(canvas);\r\n    console.log((e.currentTarget as HTMLInputElement).files);\r\n    let file = (e.currentTarget as HTMLInputElement).files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    let that = this;\r\n    reader.onload = function(evt){\r\n      if( evt.target.readyState == FileReader.DONE) {\r\n        img.src = evt.target.result as string;\r\n        if(img.width<320||img.height<240){\r\n          img.width = 320;\r\n          img.height = 240;\r\n        }\r\n        img.onload = () => {\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          context.drawImage(img, 0, 0, img.width, img.height);\r\n          let imgData = context.getImageData(0, 0, img.width, img.height);\r\n          for (let i = 0; i < imgData.data.length; i += 4) {\r\n            let avg = (imgData.data[i] + imgData.data[i + 1] + imgData.data[i + 2]) / 3;\r\n            // console.log(avg);\r\n            if(avg >= 200){\r\n              let x = (i / 4) % img.width;\r\n              let y = Math.floor((i / 4) / img.width);\r\n              // console.log([x,y]);\r\n              // x/=10;\r\n              // y/=10;\r\n              x -= img.width/2;\r\n              y -= img.height/2;\r\n              let pos_x = x < 0 ? Math.trunc(x) - 1 : Math.trunc(x) + 1;\r\n              let pos_y = y < 0 ? Math.trunc(y) - 1 : Math.trunc(y) + 1;\r\n              if(pos_x < 0)\r\n                pos_x += 1;\r\n              if(pos_y < 0)\r\n                pos_y += 1;\r\n              that.life2DContainer.generate_cell(pos_x, -pos_y, false, false);\r\n            }\r\n          }\r\n          that.life2DContainer.scene_reload();\r\n          // context.putImageData(imgData, 0, 0);\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div id=\"render_window\"></div>\r\n<div id=\"legend\">\r\n  <button (click)=\"life2DContainer.toggleLegend(); $event.stopPropagation()\" style=\"z-index: 1000\" mat-raised-button\r\n          cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\">\r\n    Guide\r\n  </button>\r\n  <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"trigger\"\r\n               [cdkConnectedOverlayOpen]=\"life2DContainer.getLegend()\">\r\n    <div id=\"legend_content\">\r\n      <p id=\"overpopulation\">This cell will die due to overpopulation</p>\r\n      <p id=\"underpopulation\">This cell will die due to underpopulation</p>\r\n      <p id=\"birth\">This cell will be born due to reproduction</p>\r\n      <p id=\"survival\">This cell survives, unaffected</p>\r\n      <hr>\r\n      <p>This is the Game of Life 2D sandbox. Here, you can experiment,<br> either with what you have learned from the\r\n        Tour of Life, or just play around with your own patterns and configurations.<br>\r\n        You will find a more detailed explanation regarding the functionality of the simulation in the Tour section of\r\n        this website.<br>\r\n        One important thing worth explaining here, however, is the option to actively change the algorithm\r\n        mid-simulation. In the options menu,<br>\r\n        you can tweak how many cells are necessary, for a cell to die, or for another to be born.<br>\r\n        The very last option in the menu allows you to upload an image (jpg/png), the lightest values of which get translated into a starting pattern of cells.\r\n      </p>\r\n      <hr>\r\n      <p><b>Left mouse button</b> -> Place a new cell</p>\r\n      <p><b>Right mouse button</b> -> Delete an existing cell</p>\r\n      <p><b>Middle mouse button</b> -> Scroll to zoom, hold to pan</p>\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n<div class=\"controls_container\">\r\n  <div id=\"controls\" (click)=\"$event.stopPropagation()\">\r\n    <button mat-icon-button color=\"primary\" (click)=\"life2DContainer.clear()\" matTooltip=\"Clear the Game board\"\r\n            matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        close\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"life2DContainer.revert()\" [disabled]=\"life2DContainer.running\"\r\n            matTooltip=\"Go back by one epoch\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        skip_previous\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"life2DContainer.play()\" matTooltip=\"Play/Pause the Game\"\r\n            matTooltipPosition=\"above\">\r\n      <mat-icon *ngIf=\"!life2DContainer.running\">\r\n        play_arrow\r\n      </mat-icon>\r\n      <mat-icon *ngIf=\"life2DContainer.running\">\r\n        pause\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"life2DContainer.advance()\" [disabled]=\"life2DContainer.running\"\r\n            matTooltip=\"Advance the game by one epoch\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        skip_next\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"life2DContainer.restore()\" [disabled]=\"life2DContainer.running\"\r\n            matTooltip=\"Restore the cleared board\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        replay\r\n      </mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n<mat-drawer-container id=\"options_container\">\r\n  <div id=\"options_button\">\r\n    <div id=\"expand_options\">\r\n      <button type=\"button\" class=\"selection_button\" mat-icon-button (click)=\"options.toggle()\" style=\"width: 1em\">\r\n        <mat-icon>keyboard_arrow_left</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <mat-drawer #options class=\"sidenav_drawer\" id=\"options_drawer\" (click)=\"$event.stopPropagation()\" mode=\"side\"\r\n              position=\"end\">\r\n    <div class=\"sidebar\" id=\"sidebar_options\">\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Living cells</p>\r\n        <p>{{life2DContainer.getLiveCount()}}</p>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Cells born</p>\r\n        <p>{{life2DContainer.nr_to_birth}}</p>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Cells died</p>\r\n        <p>{{life2DContainer.nr_to_die}}</p>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Min # of cells for survival</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"0\" max=\"{{life2DContainer.max_survival}}\" matInput\r\n                   value=\"{{life2DContainer.min_survival}}\" (change)=\"life2DContainer.setMinSurvival($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Max # of cells for survival</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"{{life2DContainer.min_survival}}\" max=\"8\" matInput\r\n                   value=\"{{life2DContainer.max_survival}}\" (change)=\"life2DContainer.setMaxSurvival($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\"># of cells for birth</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"1\" max=\"8\" matInput value=\"{{life2DContainer.birth}}\"\r\n                   (change)=\"life2DContainer.setBirth($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Prediction mode</p>\r\n        <mat-checkbox id=\"prediction_mode\" [checked]=\"life2DContainer.prediction_mode\"\r\n                      (change)=\"life2DContainer.predictionMode()\" class=\"example-margin\"\r\n                      color=\"primary\"></mat-checkbox>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Developer mode</p>\r\n        <mat-checkbox (change)=\"life2DContainer.devMode()\" class=\"example-margin\" color=\"primary\"></mat-checkbox>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Simulation interval</p>\r\n        <mat-slider color=\"primary\" min=\"0.1\" max=\"10\" step=\"0.1\" thumbLabel value=\"{{life2DContainer.interval * 10}}\"\r\n                    (change)=\"life2DContainer.change_speed($event)\"></mat-slider>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Limit of returns</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"1\" matInput id=\"revert_count\" value=\"{{life2DContainer.getRevert()}}\"\r\n                   (change)=\"life2DContainer.setRevert($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Background color</p>\r\n        <div class=\"color_sliders\">\r\n          <div class=\"option_box\">\r\n            R\r\n            <mat-slider id=\"bg_r\" (change)=\"life2DContainer.sceneColor()\" value=\"{{life2DContainer.bg_color.r * 255}}\"\r\n                        disabled=\"{{life2DContainer.prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\"\r\n                        thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            G\r\n            <mat-slider id=\"bg_g\" (change)=\"life2DContainer.sceneColor()\" value=\"{{life2DContainer.bg_color.g * 255}}\"\r\n                        disabled=\"{{life2DContainer.prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\"\r\n                        thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            B\r\n            <mat-slider id=\"bg_b\" (change)=\"life2DContainer.sceneColor()\" value=\"{{life2DContainer.bg_color.b * 255}}\"\r\n                        disabled=\"{{life2DContainer.prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\"\r\n                        thumbLabel vertical></mat-slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Cell color</p>\r\n        <div class=\"color_sliders\">\r\n          <div class=\"option_box\">\r\n            R\r\n            <mat-slider id=\"c_r\" (change)=\"life2DContainer.cellColor()\" value=\"{{life2DContainer.cell_color.r * 255}}\"\r\n                        disabled=\"{{life2DContainer.prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\"\r\n                        thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            G\r\n            <mat-slider id=\"c_g\" (change)=\"life2DContainer.cellColor()\" value=\"{{life2DContainer.cell_color.g * 255}}\"\r\n                        disabled=\"{{life2DContainer.prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\"\r\n                        thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            B\r\n            <mat-slider id=\"c_b\" (change)=\"life2DContainer.cellColor()\" value=\"{{life2DContainer.cell_color.b * 255}}\"\r\n                        disabled=\"{{life2DContainer.prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\"\r\n                        thumbLabel vertical></mat-slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Hide grid</p>\r\n        <mat-checkbox (change)=\"life2DContainer.hideGrid()\" class=\"example-margin\" color=\"primary\"></mat-checkbox>\r\n      </div>\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">File input</p>\r\n        <input type=\"file\" style=\"display: none\" id=\"file_picker\" (change)=\"loadImage($event)\" accept=\"image/png, image/jpeg\">\r\n        <button type=\"button\" (click)=\"inputImage()\" mat-raised-button style=\"margin-bottom: 2.5em\">Choose File</button>\r\n      </div>\r\n    </div>\r\n  </mat-drawer>\r\n</mat-drawer-container>\r\n<div id=\"test\"></div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import * as THREE from 'three';\r\n\r\nexport class Renderer2D{\r\n\r\n  private scene;\r\n  private camera;\r\n  // private camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\r\n  private renderer;\r\n\r\n  private width: number;\r\n  private height: number;\r\n\r\n  private wheel_down: boolean = false;\r\n\r\n  private dev_mode: boolean = false;\r\n\r\n  private def_zoom: number = 2\r\n  private min_zoom: number = 2;\r\n  private max_zoom: number = 15;\r\n  private current_zoom: number = this.def_zoom;\r\n\r\n  constructor(width: number, height: number) {\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.camera = new THREE.PerspectiveCamera( 75, width / height, 0.1, 1000 );\r\n    this.camera.position.z = this.def_zoom;\r\n    this.camera.lookAt(new THREE.Vector3(-200,-55000,-50));\r\n\r\n    const that = this;\r\n    this.renderer.domElement.addEventListener( 'wheel', (event) => {\r\n      if((that.camera.position.z < that.max_zoom && event.deltaY>0) || (that.camera.position.z > that.min_zoom && event.deltaY<0) || that.dev_mode)\r\n        that.camera.position.z += Math.sign(event.deltaY) * 0.5;\r\n    }, false);\r\n\r\n    this.renderer.domElement.addEventListener('mousedown', function(e){\r\n      if(e.button == 1)\r\n        that.wheel_down = true;\r\n    }, false);\r\n\r\n    this.renderer.domElement.addEventListener('mousemove', function(e){\r\n      if(that.wheel_down){\r\n        if(!that.dev_mode)\r\n          that.camera.position.set(Math.min(Math.max(that.camera.position.x - e.movementX/that.getScale(), -10), 10), Math.min(Math.max(that.camera.position.y + e.movementY/that.getScale(), -10), 10), that.camera.position.z);\r\n        else\r\n          that.camera.position.set(that.camera.position.x - e.movementX/that.getScale(), that.camera.position.y + e.movementY/that.getScale(), that.camera.position.z);\r\n      }\r\n    }, false);\r\n\r\n    this.renderer.domElement.addEventListener('mouseup', function(e){\r\n      if(e.button == 1)\r\n        that.wheel_down = false;\r\n    }, false);\r\n\r\n    this.setSize(width, height);\r\n  }\r\n\r\n  public devMode(){\r\n    this.dev_mode = !this.dev_mode;\r\n    if(!this.dev_mode)\r\n      this.camera.position.set(0, 0, this.def_zoom);\r\n  }\r\n\r\n  public getRenderer() {\r\n    return this.renderer.domElement;\r\n  }\r\n\r\n  // public shouldHideGrid(): boolean{\r\n  //   return this.camera.position.z>this.def_zoom+1;\r\n  // }\r\n\r\n  public getCamera(){\r\n    return this.camera;\r\n  }\r\n\r\n  public setZoom(min_zoom: number, max_zoom: number, def_zoom: number){\r\n    this.camera.position.z = min_zoom;\r\n    this.min_zoom = min_zoom;\r\n    this.max_zoom = max_zoom;\r\n    this.def_zoom = def_zoom;\r\n  }\r\n\r\n  public setSize(width: number, height: number): void{\r\n    this.width = width;\r\n    this.height = height;\r\n    this.renderer.setSize(this.width, this.height, false);\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  private getScale() {\r\n    const fov = this.camera.fov * Math.PI / 180;\r\n    const scale_height = 2 * Math.tan(fov / 2) * this.camera.position.z;\r\n    const scale = this.height / scale_height;\r\n    return scale;\r\n  }\r\n\r\n  public render(scene: THREE.Scene): void{\r\n    this.scene = scene;\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  //unused method to close webgl context\r\n  public closeContext(){\r\n    this.renderer.forceContextLoss();\r\n    this.renderer.context = null;\r\n    this.renderer.domElement = null;\r\n    this.renderer = null;\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\nexport class Cell2D{\r\n\r\n  private readonly x: number;\r\n  private readonly y: number;\r\n\r\n  private size: number = 1/10;\r\n\r\n  private cell: THREE.Mesh;\r\n\r\n  constructor(x: number, y: number, color: THREE.Color) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    const geometry = new THREE.PlaneGeometry(this.size, this.size);\r\n    const material = new THREE.MeshBasicMaterial( {color: color} );\r\n    this.cell = new THREE.Mesh(geometry, material);\r\n    this.cell.position.x = x/10 - Math.sign(x)*this.size/2;\r\n    this.cell.position.y = y/10 - Math.sign(y)*this.size/2;\r\n  }\r\n\r\n  public getCell(){\r\n    return this.cell;\r\n  }\r\n\r\n  public getX(){\r\n    return this.x;\r\n  }\r\n\r\n  public getY(){\r\n    return this.y;\r\n  }\r\n\r\n  public setColor(color: THREE.Color){\r\n    this.cell.material = new THREE.MeshBasicMaterial({color: color});\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\nexport class Renderer3D{\r\n\r\n  private scene;\r\n  private camera;\r\n  // private camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\r\n  private renderer;\r\n\r\n  private width: number;\r\n  private height: number;\r\n\r\n  constructor(width: number, height: number) {\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.camera = new THREE.PerspectiveCamera( 75, width / height, 0.1, 1000 );\r\n    this.camera.position.z = 1;\r\n\r\n    this.setSize(width, height);\r\n  }\r\n\r\n  public setSize(width: number, height: number): void{\r\n    this.width = width;\r\n    this.height = height;\r\n    this.renderer.setSize(this.width, this.height, false);\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  public getRenderer() {\r\n    return this.renderer.domElement;\r\n  }\r\n\r\n\r\n\r\n  public getCamera(){\r\n    return this.camera;\r\n  }\r\n\r\n  private getScale() {\r\n    const fov = this.camera.fov * Math.PI / 180;\r\n    const scale_height = 2 * Math.tan(fov / 2) * this.camera.position.z;\r\n    const scale = this.height / scale_height;\r\n    return scale;\r\n  }\r\n\r\n  public render(scene: THREE.Scene): void{\r\n    this.scene = scene;\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  //unused method to close webgl context\r\n  public closeContext(){\r\n    this.renderer.forceContextLoss();\r\n    this.renderer.context = null;\r\n    this.renderer.domElement = null;\r\n    this.renderer = null;\r\n  }\r\n\r\n}\r\n","import {Cell2D} from './Cell2D';\r\nimport * as THREE from 'three';\r\n\r\n\r\nexport class Cell3D{\r\n\r\n  private readonly x: number;\r\n  private readonly y: number;\r\n  private readonly z: number;\r\n\r\n  private size: number = 0.1;\r\n\r\n  private cell: THREE.Mesh;\r\n\r\n  constructor(x: number, y: number, z: number, color: THREE.Color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n\r\n    const geometry = new THREE.BoxGeometry(this.size, this.size, this.size);\r\n    const material = new THREE.MeshBasicMaterial( {color: color} );\r\n    this.cell = new THREE.Mesh(geometry, material);\r\n    this.cell.position.x = x/10 - Math.sign(x)*this.size/2;\r\n    this.cell.position.y = y/10 - Math.sign(y)*this.size/2;\r\n    this.cell.position.z = z/10 - Math.sign(z)*this.size/2;\r\n\r\n    const geo = new THREE.EdgesGeometry(this.cell.geometry);\r\n    const mat = new THREE.LineBasicMaterial( { color: 0x000000, linewidth: 1 } );\r\n    let wireframe = new THREE.LineSegments( geo, mat );\r\n    wireframe.renderOrder = 1;\r\n    this.cell.add( wireframe );\r\n\r\n  }\r\n\r\n  public getCell(){\r\n    return this.cell;\r\n  }\r\n\r\n  public getX(){\r\n    return this.x;\r\n  }\r\n\r\n  public getY(){\r\n    return this.y;\r\n  }\r\n\r\n  public getZ(){\r\n    return this.z;\r\n  }\r\n\r\n  public setColor(color: THREE.Color, transparent: boolean = false){\r\n    let m = new THREE.MeshBasicMaterial({color: color});\r\n    m.opacity = 0.5;\r\n    m.transparent = transparent;\r\n    this.cell.material = m;\r\n  }\r\n\r\n}\r\n","import {Cell2D} from './Cell2D';\r\nimport * as THREE from 'three';\r\n\r\nexport class Grid2D {\r\n\r\n  private coords = [];\r\n\r\n  private active = [];\r\n\r\n  private to_die = [];\r\n  private to_birth = [];\r\n\r\n  private lonely = [];\r\n  private overcrowded = [];\r\n\r\n  private restore = [];\r\n\r\n  private revert = [];\r\n\r\n  private revert_limit = 20;\r\n\r\n  private cell_color = new THREE.Color(0xffc107);\r\n\r\n  private prediction_mode: boolean = false;\r\n  private predicted_count: number = 0;\r\n\r\n  private min_survival: number = 2;\r\n  private max_survival: number = 3;\r\n  private birth: number = 3;\r\n\r\n  private max_cells = 0;\r\n\r\n  public getMinSurvival(){\r\n    return this.min_survival;\r\n  }\r\n\r\n  public getMaxSurvival(){\r\n    return this.max_survival;\r\n  }\r\n\r\n  public getBirth(){\r\n    return this.birth;\r\n  }\r\n\r\n  public setMinSurvival(n: number){\r\n    this.min_survival = n;\r\n  }\r\n\r\n  public setMaxSurvival(n: number){\r\n    this.max_survival = n;\r\n  }\r\n\r\n  public setBirth(n: number){\r\n    this.birth = n;\r\n  }\r\n\r\n  public add_to_grid(cell: Cell2D, auto: boolean = false) {\r\n\r\n    if((this.coords[cell.getX()] && this.coords[cell.getX()][cell.getY()] != null) || (!auto && this.max_cells > 0 && this.active.length > this.max_cells))\r\n      return;\r\n\r\n    this.active.push(cell);\r\n\r\n    let config = \"\";\r\n    for(let a of this.active)\r\n      config+=\"[\"+a.getX()+\",\"+a.getY()+\"],\";\r\n\r\n    // console.log([cell.getX(), cell.getY()]);\r\n\r\n    if (this.coords[cell.getX()] == null) {\r\n      this.coords[cell.getX()] = [];\r\n    }\r\n    this.coords[cell.getX()][cell.getY()] = cell;\r\n\r\n    this.restore = [];\r\n  }\r\n\r\n  public remove_from_grid(x: number, y: number) {\r\n    // for (let c of this.active) {\r\n    //   if (c.getX() == x && c.getY() == y) {\r\n    //     this.active.splice(this.active.indexOf(c), 1);\r\n    //     this.coords[x][y] = null;\r\n    //   }\r\n    // }\r\n    this.active.splice(this.active.indexOf(this.coords[x][y]),1);\r\n    this.coords[x][y]=null;\r\n  }\r\n\r\n  public advance() {\r\n\r\n    if(this.predicted_count>0){\r\n      this.active.splice(this.active.length-this.predicted_count);\r\n    }\r\n\r\n    this.to_die = [];\r\n    this.to_birth = [];\r\n    this.lonely = [];\r\n    this.overcrowded = [];\r\n\r\n    if (this.revert.length >= this.revert_limit) {\r\n      this.revert = this.revert.slice(1);\r\n    }\r\n\r\n    this.revert.push(this.active.slice());\r\n\r\n    for (let a of this.active) {\r\n      this.checkNeighbors(a.getX(), a.getY());\r\n    }\r\n\r\n    for (let death of this.to_die) {\r\n      this.active.splice(this.active.indexOf(death), 1);\r\n      this.coords[death.getX()][death.getY()] = null;\r\n    }\r\n\r\n    for (let live of this.to_birth) {\r\n      this.active.push(live);\r\n      if (!this.coords[live.getX()]) {\r\n        this.coords[live.getX()] = [];\r\n      }\r\n      this.coords[live.getX()][live.getY()] = live;\r\n    }\r\n\r\n    if (this.prediction_mode) {\r\n      this.predict();\r\n    }\r\n  }\r\n\r\n  public get_cells() {\r\n    return this.active;\r\n  }\r\n\r\n  public clear_grid() {\r\n    this.restore = this.active;\r\n    this.active = [];\r\n    this.coords = [];\r\n    this.to_birth = [];\r\n    this.to_die = [];\r\n    this.revert = [];\r\n    this.lonely = [];\r\n    this.overcrowded = [];\r\n  }\r\n\r\n  public restore_grid() {\r\n    for (let c of this.restore) {\r\n      this.add_to_grid(c);\r\n    }\r\n  }\r\n\r\n  public setRevert(limit: number) {\r\n    this.revert_limit = limit;\r\n  }\r\n\r\n  public getRevert() {\r\n    return this.revert_limit;\r\n  }\r\n\r\n  public getToDie() {\r\n    return this.to_die;\r\n  }\r\n\r\n  public getToBirth() {\r\n    return this.to_birth;\r\n  }\r\n\r\n  //reverts the grid to a previous state\r\n  public revert_grid() {\r\n    if (this.revert.length > 0) {  //checks if any reverse steps exist\r\n      const prev = this.revert.pop();\r\n\r\n      //clear everything. computation starts fresh after a revert\r\n      this.active = [];\r\n      this.coords = [];\r\n      this.to_birth = [];\r\n      this.to_die = [];\r\n      this.restore = [];\r\n\r\n      //go through last state and add cells to grid\r\n      for (let c of prev) {\r\n        this.add_to_grid(c);\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkNeighbors(x: number, y: number) {\r\n    for (let i = -1; i <= 1; i++) {\r\n      for (let j = -1; j <= 1; j++) {\r\n        const coord_x = (x < 0 && x + i == 0) ? 1 : ((x > 0 && x + i == 0) ? -1 : x + i);\r\n        const coord_y = (y < 0 && y + j == 0) ? 1 : ((y > 0 && y + j == 0) ? -1 : y + j);\r\n        if (!this.coords[coord_x] || this.coords[coord_x][coord_y] == null) {\r\n          this.cellBirth(coord_x, coord_y);\r\n        }\r\n      }\r\n    }\r\n    this.cellDeath(this.coords[x][y]);\r\n  }\r\n\r\n\r\n  private cellDeath(cell: Cell2D) {\r\n    let counter = 0;\r\n    for (let i = -1; i <= 1; i++) {\r\n      for (let j = -1; j <= 1; j++) {\r\n        const coord_x = (cell.getX() < 0 && cell.getX() + i == 0) ? 1 : ((cell.getX() > 0 && cell.getX() + i == 0) ? -1 : cell.getX() + i);\r\n        const coord_y = (cell.getY() < 0 && cell.getY() + j == 0) ? 1 : ((cell.getY() > 0 && cell.getY() + j == 0) ? -1 : cell.getY() + j);\r\n        if (this.coords[coord_x] && this.coords[coord_x][coord_y] != null) {\r\n          counter++;\r\n        }\r\n      }\r\n    }\r\n    if (!this.to_die.includes(cell)) {\r\n      if(counter < this.min_survival+1){\r\n        this.to_die.push(cell);\r\n        this.lonely.push(cell);\r\n      }else if(counter > this.max_survival+1){\r\n        this.to_die.push(cell);\r\n        this.overcrowded.push(cell);\r\n      }\r\n    }\r\n  }\r\n\r\n  private cellBirth(x: number, y: number) {\r\n    var counter = 0;\r\n    for (var i = -1; i <= 1; i++) {\r\n      for (var j = -1; j <= 1; j++) {\r\n        var coord_x = (x < 0 && x + i == 0) ? 1 : ((x > 0 && x + i == 0) ? -1 : x + i);\r\n        var coord_y = (y < 0 && y + j == 0) ? 1 : ((y > 0 && y + j == 0) ? -1 : y + j);\r\n        if (this.coords[coord_x] && this.coords[coord_x][coord_y] != null) {\r\n          counter++;\r\n        }\r\n      }\r\n    }\r\n    if (counter == this.birth) {\r\n      for (let cell of this.to_birth) {\r\n        if (cell.getX() == x && cell.getY() == y) {\r\n          return;\r\n        }\r\n      }\r\n      this.to_birth.push(new Cell2D(x, y, this.cell_color));\r\n    }\r\n  }\r\n\r\n  public cellColor(color: THREE.Color) {\r\n    this.cell_color = color;\r\n    for (let c of this.active) {\r\n      c.setColor(color);\r\n    }\r\n  }\r\n\r\n  public predictionMode() {\r\n    this.prediction_mode = !this.prediction_mode;\r\n    if (this.prediction_mode) {\r\n      this.predict();\r\n    } else {\r\n      for (let d of this.to_die) {\r\n        this.active[this.active.indexOf(d)].setColor(this.cell_color);\r\n      }\r\n      if(this.predicted_count>0){\r\n        this.active.splice(this.active.length-this.predicted_count);\r\n      }\r\n      this.predicted_count = 0;\r\n    }\r\n  }\r\n\r\n  public maxCells(count: number){\r\n    this.max_cells = count;\r\n  }\r\n\r\n  private predict() {\r\n    this.overcrowded = [];\r\n    this.lonely = [];\r\n    this.to_die = [];\r\n    this.to_birth = [];\r\n    for (let a of this.active) {\r\n      this.checkNeighbors(a.getX(), a.getY());\r\n    }\r\n\r\n    for (let l of this.lonely) {\r\n      this.active[this.active.indexOf(l)].setColor(new THREE.Color(0xd81b60)); //pink\r\n    }\r\n    for (let o of this.overcrowded) {\r\n      this.active[this.active.indexOf(o)].setColor(new THREE.Color(0x1e88e5)); //blue\r\n    }\r\n    this.predicted_count = this.to_birth.length;\r\n    for (let b of this.to_birth){\r\n      b.setColor(new THREE.Color(0x004d40)); //green\r\n      this.active.push(b);\r\n    }\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport {GridHelper, Vector3} from 'three';\r\nimport {TrackballControls} from 'three/examples/jsm/controls/TrackballControls';\r\nimport {Renderer2D} from './Renderer2D';\r\nimport {Grid2D} from './Grid2D';\r\nimport {Cell2D} from './Cell2D';\r\n\r\nexport class Life2DContainer{\r\n\r\n  private scene = new THREE.Scene();\r\n  protected renderer: Renderer2D;\r\n\r\n  private helperGrid: GridHelper;\r\n  private clock = new THREE.Clock();\r\n  private delta = 0;\r\n  interval: number = 0.3;\r\n  running: boolean = false;\r\n\r\n  private raycaster = new THREE.Raycaster();\r\n  private mouse = new THREE.Vector2();\r\n  private raycast_plane = new THREE.Mesh(new THREE.PlaneGeometry(100, 100), new THREE.MeshBasicMaterial({color: 0xffff00}));\r\n  private mouse_down: boolean = false;\r\n\r\n  private trackball;\r\n\r\n  protected repeating = [];\r\n  protected repeating_counter: number = 1;\r\n\r\n  nr_to_die = 0;\r\n  nr_to_birth = 0;\r\n\r\n  legend: boolean = false;\r\n\r\n  bg_color = new THREE.Color('rgb(0,0,0)');\r\n  cell_color = new THREE.Color('rgb(255,193,7)');\r\n\r\n  prediction_mode: boolean = false;\r\n\r\n  protected grid = new Grid2D();\r\n\r\n  min_survival:number = this.grid.getMinSurvival();\r\n  max_survival:number = this.grid.getMaxSurvival();\r\n  birth:number = this.grid.getBirth();\r\n\r\n  hide_grid: boolean = false;\r\n\r\n  constructor(parent: string){\r\n\r\n    window.addEventListener('contextmenu', function(e) {\r\n      e.preventDefault();\r\n    }, false);\r\n\r\n    const width = document.getElementById(parent).offsetWidth;\r\n    const height = document.getElementById(parent).offsetHeight;\r\n\r\n    this.renderer = new Renderer2D(width, height);\r\n    document.getElementById(parent).appendChild(this.renderer.getRenderer());\r\n    let that = this;\r\n\r\n    window.addEventListener('resize', function() {\r\n      that.renderer.setSize(document.getElementById(parent).offsetWidth, document.getElementById(parent).offsetHeight);\r\n    }, false);\r\n\r\n    // this.renderer.getRenderer().addEventListener('wheel', function(){\r\n    //   that.showGrid();\r\n    // }, false);\r\n\r\n    this.renderer.getRenderer().addEventListener('mousemove', function(e) {\r\n      const rect = that.renderer.getRenderer().getBoundingClientRect();\r\n      that.mouse.x = ( ( e.clientX - rect.left ) / ( rect.right - rect.left ) ) * 2 - 1;\r\n      that.mouse.y = - ( ( e.clientY - rect.top ) / ( rect.bottom - rect.top) ) * 2 + 1;\r\n\r\n      let set_pred = false;\r\n      if(that.prediction_mode){\r\n        set_pred = true;\r\n        that.predictionMode();\r\n      }\r\n\r\n\r\n      if (that.mouse_down) {\r\n        if (e.which == 1) {\r\n          that.checkAddition();\r\n        } else if (e.which == 3) {\r\n          that.checkDeletion();\r\n        }\r\n      }\r\n\r\n      if(set_pred && !that.prediction_mode)\r\n        that.predictionMode();\r\n    }, false);\r\n\r\n\r\n    this.renderer.getRenderer().addEventListener('mouseup', function(e) {\r\n      that.mouse_down = false;\r\n    }, false);\r\n\r\n\r\n    this.raycast_plane.material.colorWrite = false;\r\n    this.renderer.getRenderer().addEventListener('mousedown', function(e) {\r\n      that.mouse_down = true;\r\n\r\n      let set_pred = false;\r\n      if(that.prediction_mode){\r\n        set_pred = true;\r\n        that.predictionMode();\r\n      }\r\n\r\n      if (e.button == 0) {  //perform left click action -> add\r\n        that.checkAddition();\r\n      } else if (e.button == 2) {  //perform right click action -> delete\r\n        that.checkDeletion();\r\n      }\r\n\r\n      if(set_pred && !that.prediction_mode)\r\n        that.predictionMode();\r\n\r\n    }, false);\r\n\r\n\r\n    this.helperGrid = new THREE.GridHelper(100, 1000, new THREE.Color(0x888888));\r\n    // this.helperGrid = new THREE.GridHelper(100, 1000);\r\n    this.helperGrid.position.z = 0.001;\r\n    this.helperGrid.rotateOnAxis(new Vector3(1, 0, 0), 90 * Math.PI / 180);\r\n    this.scene.add(this.helperGrid);\r\n    this.scene.add(this.raycast_plane);\r\n    this.scene.background = this.bg_color;\r\n\r\n    //Not sure why this needs to be here for the manual camera movement to work???????\r\n    this.trackball = new TrackballControls(this.renderer.getCamera(), this.renderer.getRenderer());\r\n\r\n    this.animate();\r\n  }\r\n\r\n  // private showGrid() {\r\n  //   this.renderer.shouldHideGrid() ? this.helperGrid.visible = false : this.helperGrid.visible = true;\r\n  // }\r\n\r\n  private checkDeletion() {\r\n    if (this.scene.children.length > 2) {  //if raycast detects more that 2 objects(grid and plane) that means a cell is in place and can be deleted\r\n      this.scene.children.splice(0, 2);\r\n      const cell_check = this.raycaster.intersectObjects(this.scene.children);\r\n      if (cell_check.length != 0) {\r\n        let x = cell_check[0].point.x < 0 ? Math.trunc(cell_check[0].point.x * 10) - 1 : Math.trunc(cell_check[0].point.x * 10) + 1;\r\n        let y = cell_check[0].point.y < 0 ? Math.trunc(cell_check[0].point.y * 10) - 1 : Math.trunc(cell_check[0].point.y * 10) + 1;\r\n\r\n        this.grid.remove_from_grid(x, y);\r\n      }\r\n      this.scene_reload();\r\n    }\r\n  }\r\n\r\n  private checkAddition() {\r\n    if (this.scene.children.length > 2) {  //if scene contains more that 2 objects(grid and plane) that means a cell is in place and can be deleted\r\n      this.scene.children.splice(0, 2);\r\n      const cell_check = this.raycaster.intersectObjects(this.scene.children);\r\n      if (cell_check.length != 0) {\r\n        this.scene_reload();\r\n        return;\r\n      }\r\n    }\r\n    const intersects = this.raycaster.intersectObject(this.raycast_plane);\r\n    if (intersects.length != 0) {\r\n      let x = intersects[0].point.x < 0 ? Math.trunc(intersects[0].point.x * 10) - 1 : Math.trunc(intersects[0].point.x * 10) + 1;\r\n      let y = intersects[0].point.y < 0 ? Math.trunc(intersects[0].point.y * 10) - 1 : Math.trunc(intersects[0].point.y * 10) + 1;\r\n\r\n      this.generate_cell(x, y);\r\n      this.scene_reload();\r\n    }\r\n  }\r\n\r\n  generate_cell(x: number, y: number, auto: boolean = false, regenerate: boolean = true) {\r\n    const cell = new Cell2D(x, y, this.cell_color);\r\n    this.grid.add_to_grid(cell, auto);\r\n    if(regenerate)\r\n      this.scene_reload();\r\n  }\r\n\r\n  scene_reload() {\r\n    this.scene = new THREE.Scene();\r\n    if(!this.hide_grid)\r\n      this.scene.add(this.helperGrid);\r\n    this.scene.add(this.raycast_plane);\r\n    this.scene.background = this.bg_color;\r\n    const cells = this.grid.get_cells();\r\n    for (let c of cells) {\r\n      this.scene.add(c.getCell());\r\n    }\r\n  }\r\n\r\n  change_speed(e) {\r\n    this.interval = e.value / 10;\r\n  }\r\n\r\n  hideGrid(){\r\n    this.hide_grid = !this.hide_grid;\r\n    this.scene_reload();\r\n  }\r\n\r\n  getLiveCount(){\r\n    return this.grid.get_cells().length;\r\n  }\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n\r\n    this.raycaster.setFromCamera(this.mouse, this.renderer.getCamera());\r\n\r\n    if (this.running) {\r\n      this.delta += this.clock.getDelta();\r\n      if (this.delta > this.interval) {\r\n        this.grid.advance();\r\n        if(this.repeating.length!=0 && this.repeating_counter++==30){\r\n          for(let r of this.repeating)\r\n            this.generate_cell(r[0],r[1]);\r\n          this.repeating_counter=1;\r\n        }\r\n        this.nr_to_die = this.grid.getToDie().length;\r\n        this.nr_to_birth = this.grid.getToBirth().length;\r\n        this.scene_reload();\r\n        this.delta = this.delta % this.interval;\r\n      }\r\n    }\r\n    this.renderer.render(this.scene);\r\n  };\r\n\r\n  public advance() {\r\n    if (!this.running) {\r\n      this.grid.advance();\r\n      if(this.repeating.length!=0 && this.repeating_counter++==30){\r\n        for(let r of this.repeating)\r\n          this.generate_cell(r[0],r[1]);\r\n        this.repeating_counter=1;\r\n      }\r\n      this.scene_reload();\r\n    }\r\n    this.nr_to_die = this.grid.getToDie().length;\r\n    this.nr_to_birth = this.grid.getToBirth().length;\r\n  }\r\n\r\n  public play() {\r\n    this.running = !this.running;\r\n  }\r\n\r\n  public clear() {\r\n    this.grid.clear_grid();\r\n    this.scene_reload();\r\n    this.repeating = [];\r\n    this.repeating_counter = 1;\r\n  }\r\n\r\n  public restore() {\r\n    this.grid.restore_grid();\r\n    this.scene_reload();\r\n  }\r\n\r\n  public revert() {\r\n    this.grid.revert_grid();\r\n    this.scene_reload();\r\n  }\r\n\r\n  setRevert(e) {\r\n    this.grid.setRevert(e.target.value);\r\n  }\r\n\r\n  getRevert() {\r\n    return this.grid.getRevert();\r\n  }\r\n\r\n  setRepeating(cells: any[]){\r\n    this.repeating = cells;\r\n    this.repeating_counter = 1;\r\n  }\r\n\r\n  setMinSurvival(e){\r\n    if(this.prediction_mode) {\r\n      this.predictionMode();\r\n      (document.getElementById('prediction_mode') as HTMLInputElement).checked  = false;\r\n    }\r\n    this.min_survival = parseInt(e.target.value);\r\n    this.grid.setMinSurvival(this.min_survival);\r\n  }\r\n\r\n  setMaxSurvival(e){\r\n    if(this.prediction_mode) {\r\n      this.predictionMode();\r\n      (document.getElementById('prediction_mode') as HTMLInputElement).checked  = false;\r\n    }\r\n    this.max_survival = parseInt(e.target.value);\r\n    this.grid.setMaxSurvival(this.max_survival);\r\n  }\r\n\r\n  setBirth(e){\r\n    if(this.prediction_mode) {\r\n      this.predictionMode();\r\n      // console.log((document.getElementById('prediction_mode').childNodes[0] as HTMLInputElement));\r\n    }\r\n    this.birth = parseInt(e.target.value);\r\n    this.grid.setBirth(this.birth);\r\n  }\r\n\r\n  setSpeed(s: number){\r\n    this.interval = s;\r\n  }\r\n\r\n  public toggleLegend(){\r\n    this.legend = !this.legend;\r\n  }\r\n  public getLegend(){\r\n    return this.legend;\r\n  }\r\n\r\n  getRunning(){\r\n    return this.running;\r\n  }\r\n\r\n  sceneColor() {\r\n    let r = document.getElementById('bg_r').innerText;\r\n    let g = document.getElementById('bg_g').innerText;\r\n    let b = document.getElementById('bg_b').innerText;\r\n    this.bg_color = new THREE.Color('rgb(' + r + ',' + g + ',' + b + ')');\r\n    this.scene_reload();\r\n  }\r\n\r\n  cellColor() {\r\n    let r = document.getElementById('c_r').innerText;\r\n    let g = document.getElementById('c_g').innerText;\r\n    let b = document.getElementById('c_b').innerText;\r\n    this.cell_color = new THREE.Color('rgb(' + r + ',' + g + ',' + b + ')');\r\n    this.grid.cellColor(this.cell_color);\r\n    this.scene_reload();\r\n  }\r\n\r\n  predictionMode() {\r\n    this.bg_color = new THREE.Color(0x000000);\r\n    this.cell_color = new THREE.Color(0xffc107);\r\n    this.grid.cellColor(this.cell_color);\r\n    this.prediction_mode = !this.prediction_mode;\r\n    this.grid.predictionMode();\r\n    this.scene_reload();\r\n  }\r\n\r\n  devMode(){\r\n    this.renderer.devMode();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'tour-of-life';\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  reroute(path: string){\r\n    let p = window.location.href;\r\n    let parts = p.split(\"/\");\r\n    parts[parts.length-1] = path;\r\n    // console.log(parts.join(\"/\"));\r\n    window.location.href = parts.join(\"/\");\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-drawer-container id=\"navigation_container\">\r\n    <mat-drawer #drawer class=\"sidenav_drawer\" id=\"navigation_drawer\" mode=\"over\">\r\n      <div class=\"sidebar\" id=\"sidebar_navigation\">\r\n        <button type=\"button\" mat-button (click)=\"reroute('life2d')\">2D Game of Life simulator</button>\r\n        <button type=\"button\" mat-button (click)=\"reroute('tour-of-life')\">Tour of Life</button>\r\n        <button type=\"button\" mat-button (click)=\"reroute('life3d')\">3D Game of Life simulator</button>\r\n      </div>\r\n    </mat-drawer>\r\n    <div id=\"sidenav_button\" style=\"position: absolute; z-index: 1000\">\r\n      <div id=\"expand_sidenav\">\r\n        <button type=\"button\" class=\"selection_button\" mat-icon-button (click)=\"drawer.toggle()\" style=\"width: 1em\">\r\n          <mat-icon>keyboard_arrow_right</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n  </mat-drawer-container>\r\n</div>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {Life2DComponent} from './components/Life2D/Life2D.component';\r\nimport {Life3DComponent} from './components/Life3D/Life3D.component';\r\nimport {TourOfLifeComponent} from './components/TourOfLife/TourOfLife.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Life2DComponent,\r\n    Life3DComponent,\r\n    TourOfLifeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatExpansionModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    OverlayModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Cell3D} from './Cell3D';\r\nimport * as THREE from 'three';\r\n\r\nexport class Grid3D {\r\n\r\n  private coords = [];\r\n\r\n  private active = [];\r\n\r\n  private to_die = [];\r\n  private to_birth = [];\r\n\r\n  private lonely = [];\r\n  private overcrowded = [];\r\n\r\n  private restore = [];\r\n\r\n  private revert = [];\r\n\r\n  private revert_limit = 20;\r\n\r\n  private cell_color = new THREE.Color(0xffc107);\r\n\r\n  private prediction_mode: boolean = false;\r\n  private predicted_count: number = 0;\r\n\r\n  private min_survival: number = 4;\r\n  private max_survival: number = 5;\r\n  private birth: number = 5;\r\n\r\n\r\n  public add_to_grid(cell: Cell3D, auto: boolean = false) {\r\n\r\n    if (this.coords[cell.getX()] && this.coords[cell.getX()][cell.getY()] && this.coords[cell.getX()][cell.getY()][cell.getZ()] != null) {\r\n      return;\r\n    }\r\n\r\n    this.active.push(cell);\r\n\r\n    // let config = \"\";\r\n    // for(let a of this.active)\r\n    //   config+=\"[\"+a.getX()+\",\"+a.getY()+\"],\";\r\n    // console.log(config);\r\n\r\n    if (this.coords[cell.getX()] == null) {\r\n      this.coords[cell.getX()] = [];\r\n    }\r\n    if (this.coords[cell.getX()][cell.getY()] == null) {\r\n      this.coords[cell.getX()][cell.getY()] = [];\r\n    }\r\n    this.coords[cell.getX()][cell.getY()][cell.getZ()] = cell;\r\n\r\n    // this.restore = [];\r\n  }\r\n\r\n  public remove_from_grid(x: number, y: number, z: number) {\r\n    // for (let c of this.active) {\r\n    //   if (c.getX() == x && c.getY() == y) {\r\n    //     this.active.splice(this.active.indexOf(c), 1);\r\n    //     this.coords[x][y] = null;\r\n    //   }\r\n    // }\r\n    if (this.coords[x] && this.coords[x][y] && this.coords[x][y][z]) {\r\n      this.active.splice(this.active.indexOf(this.coords[x][y][z]), 1);\r\n      this.coords[x][y][z] = null;\r\n    }\r\n  }\r\n\r\n\r\n  public advance() {\r\n    if (this.predicted_count > 0) {\r\n      this.active.splice(this.active.length - this.predicted_count);\r\n    }\r\n\r\n    this.to_die = [];\r\n    this.to_birth = [];\r\n    this.lonely = [];\r\n    this.overcrowded = [];\r\n\r\n    if (this.revert.length >= this.revert_limit) {\r\n      this.revert = this.revert.slice(1);\r\n    }\r\n\r\n    this.revert.push(this.active.slice());\r\n\r\n    for (let a of this.active) {\r\n      this.check_neighbors(a.getX(), a.getY(), a.getZ());\r\n    }\r\n\r\n    for (let death of this.to_die) {\r\n      this.active.splice(this.active.indexOf(death), 1);\r\n      this.coords[death.getX()][death.getY()][death.getZ()] = null;\r\n    }\r\n\r\n    for (let live of this.to_birth) {\r\n      this.active.push(live);\r\n      if (!this.coords[live.getX()]) {\r\n        this.coords[live.getX()] = [];\r\n      }\r\n      if (!this.coords[live.getX()][live.getY()]) {\r\n        this.coords[live.getX()][live.getY()] = [];\r\n      }\r\n      this.coords[live.getX()][live.getY()][live.getZ()] = live;\r\n    }\r\n\r\n    if (this.prediction_mode) {\r\n      this.predict();\r\n    }\r\n  }\r\n\r\n  private check_neighbors(x: number, y: number, z: number) {\r\n    for (let i = -1; i <= 1; i++) {\r\n      for (let j = -1; j <= 1; j++) {\r\n        for (let k = -1; k <= 1; k++) {\r\n          const coord_x = (x < 0 && x + i == 0) ? 1 : ((x > 0 && x + i == 0) ? -1 : x + i);\r\n          const coord_y = (y < 0 && y + j == 0) ? 1 : ((y > 0 && y + j == 0) ? -1 : y + j);\r\n          const coord_z = (z < 0 && z + k == 0) ? 1 : ((z > 0 && z + k == 0) ? -1 : z + k);\r\n          if (this.coords[coord_x] && this.coords[coord_x][coord_y] && this.coords[coord_x][coord_y][coord_z]) {\r\n            this.cell_death(this.coords[coord_x][coord_y][coord_z]);\r\n          } else {\r\n            this.cell_birth(coord_x, coord_y, coord_z);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private cell_death(cell: Cell3D) {\r\n    let counter = 0;\r\n    for (let i = -1; i <= 1; i++) {\r\n      for (let j = -1; j <= 1; j++) {\r\n        for (let k = -1; k <= 1; k++) {\r\n          const coord_x = (cell.getX() < 0 && cell.getX() + i == 0) ? 1 : ((cell.getX() > 0 && cell.getX() + i == 0) ? -1 : cell.getX() + i);\r\n          const coord_y = (cell.getY() < 0 && cell.getY() + j == 0) ? 1 : ((cell.getY() > 0 && cell.getY() + j == 0) ? -1 : cell.getY() + j);\r\n          const coord_z = (cell.getZ() < 0 && cell.getZ() + k == 0) ? 1 : ((cell.getZ() > 0 && cell.getZ() + k == 0) ? -1 : cell.getZ() + k);\r\n          if (this.coords[coord_x] && this.coords[coord_x][coord_y] && this.coords[coord_x][coord_y][coord_z]) {\r\n            counter++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!this.to_die.includes(cell)) {\r\n      if (counter < this.min_survival + 1) {\r\n        this.to_die.push(cell);\r\n        this.lonely.push(cell);\r\n      } else if (counter > this.max_survival + 1) {\r\n        this.to_die.push(cell);\r\n        this.overcrowded.push(cell);\r\n      }\r\n    }\r\n  }\r\n\r\n  private cell_birth(x: number, y: number, z: number) {\r\n    var counter = 0;\r\n    for (var i = -1; i <= 1; i++) {\r\n      for (var j = -1; j <= 1; j++) {\r\n        for (var k = -1; k <= 1; k++) {\r\n          var coord_x = (x < 0 && x + i == 0) ? 1 : ((x > 0 && x + i == 0) ? -1 : x + i);\r\n          var coord_y = (y < 0 && y + j == 0) ? 1 : ((y > 0 && y + j == 0) ? -1 : y + j);\r\n          var coord_z = (z < 0 && z + k == 0) ? 1 : ((z > 0 && z + k == 0) ? -1 : z + k);\r\n          if (this.coords[coord_x] && this.coords[coord_x][coord_y] && this.coords[coord_x][coord_y][coord_z]) {\r\n            counter++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (counter == this.birth) {\r\n      for (let cell of this.to_birth) {\r\n        if (cell.getX() == x && cell.getY() == y && cell.getZ() == z) {\r\n          return;\r\n        }\r\n      }\r\n      this.to_birth.push(new Cell3D(x, y, z, this.cell_color));\r\n    }\r\n  }\r\n\r\n  public clear_grid() {\r\n    this.restore = this.active;\r\n    this.active = [];\r\n    this.coords = [];\r\n    this.to_birth = [];\r\n    this.to_die = [];\r\n    this.revert = [];\r\n    this.lonely = [];\r\n    this.overcrowded = [];\r\n  }\r\n\r\n  public restore_grid() {\r\n    for (let c of this.restore) {\r\n      this.add_to_grid(c);\r\n    }\r\n  }\r\n\r\n  public revert_grid() {\r\n    if (this.revert.length > 0) {  //checks if any reverse steps exist\r\n      const prev = this.revert.pop();\r\n\r\n      //clear everything. computation starts fresh after a revert\r\n      this.active = [];\r\n      this.coords = [];\r\n      this.to_birth = [];\r\n      this.to_die = [];\r\n      this.restore = [];\r\n\r\n      //go through last state and add cells to grid\r\n      for (let c of prev) {\r\n        this.add_to_grid(c);\r\n      }\r\n    }\r\n  }\r\n\r\n  public setRevert(limit: number) {\r\n    this.revert_limit = limit;\r\n  }\r\n\r\n  public getRevert() {\r\n    return this.revert_limit;\r\n  }\r\n\r\n  public getToDie() {\r\n    return this.to_die;\r\n  }\r\n\r\n  public getToBirth() {\r\n    return this.to_birth;\r\n  }\r\n\r\n\r\n  public get_cells() {\r\n    return this.active;\r\n  }\r\n\r\n  public getMinSurvival(){\r\n    return this.min_survival;\r\n  }\r\n\r\n  public setMinSurvival(n: number){\r\n    this.min_survival = n;\r\n  }\r\n\r\n  public getMaxSurvival(){\r\n    return this.max_survival;\r\n  }\r\n\r\n  public setMaxSurvival(n:number){\r\n    this.max_survival = n;\r\n  }\r\n\r\n  public getBirth(){\r\n    return this.birth;\r\n  }\r\n\r\n  public setBirth(n:number){\r\n    this.birth = n;\r\n  }\r\n\r\n  public cellColor(color: THREE.Color) {\r\n    this.cell_color = color;\r\n    for (let c of this.active) {\r\n      c.setColor(color);\r\n    }\r\n  }\r\n\r\n  public predictionMode() {\r\n    this.prediction_mode = !this.prediction_mode;\r\n    if (this.prediction_mode) {\r\n      this.predict();\r\n    } else {\r\n      for (let d of this.to_die) {\r\n        this.active[this.active.indexOf(d)].setColor(this.cell_color);\r\n      }\r\n      if(this.predicted_count>0){\r\n        this.active.splice(this.active.length-this.predicted_count);\r\n      }\r\n      this.predicted_count = 0;\r\n    }\r\n  }\r\n\r\n  private predict() {\r\n    this.overcrowded = [];\r\n    this.lonely = [];\r\n    this.to_die = [];\r\n    this.to_birth = [];\r\n    for (let a of this.active) {\r\n      this.check_neighbors(a.getX(), a.getY(), a.getZ());\r\n    }\r\n\r\n    for (let l of this.lonely) {\r\n      this.active[this.active.indexOf(l)].setColor(new THREE.Color(0xd81b60)); //pink\r\n    }\r\n    for (let o of this.overcrowded) {\r\n      this.active[this.active.indexOf(o)].setColor(new THREE.Color(0x1e88e5)); //blue\r\n    }\r\n    this.predicted_count = this.to_birth.length;\r\n    for (let b of this.to_birth){\r\n      b.setColor(new THREE.Color(0x004d40), true); //green\r\n      this.active.push(b);\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\nimport * as THREE from 'three';\r\nimport {Renderer3D} from '../../Renderer3D';\r\nimport {GridHelper, Ray, Raycaster, Vector3} from 'three';\r\nimport {Cell3D} from '../../Cell3D';\r\nimport {TrackballControls} from 'three/examples/jsm/controls/TrackballControls';\r\nimport {Grid3D} from '../../Grid3D';\r\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'life-3d',\r\n  templateUrl: './Life3D.component.html',\r\n  styleUrls: ['./Life3D.component.css']\r\n})\r\nexport class Life3DComponent implements OnInit {\r\n\r\n  private scene = new THREE.Scene();\r\n  protected renderer: Renderer3D;\r\n\r\n  private helperGrid: GridHelper;\r\n  private clock = new THREE.Clock();\r\n  private delta = 0;\r\n  interval: number = 0.3;\r\n  running: boolean = false;\r\n\r\n  private mouse = new THREE.Vector2();\r\n  private painting: boolean = false;\r\n  private deleting: boolean = false;\r\n\r\n  private trackball;\r\n\r\n  private grid = new Grid3D();\r\n\r\n  private raycaster = new THREE.Raycaster();\r\n  private raycast_plane = new THREE.Mesh(new THREE.PlaneGeometry(100, 100), new THREE.MeshBasicMaterial({color: 0xffff00}));\r\n  private pointer;\r\n  private indicator;\r\n\r\n  min_survival: number = this.grid.getMinSurvival();\r\n  max_survival: number = this.grid.getMaxSurvival();\r\n  birth: number = this.grid.getBirth();\r\n\r\n  nr_to_die = 0;\r\n  nr_to_birth = 0;\r\n\r\n  prediction_mode: boolean = false;\r\n\r\n  bg_color = new THREE.Color('rgb(0,0,0)');\r\n  cell_color = new THREE.Color('rgb(255,193,7)');\r\n\r\n  legend: boolean = false;\r\n\r\n  private edit_mode: boolean = false;\r\n\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n    route.params.subscribe(\r\n      params => {\r\n        console.log(document.getElementById(\"render_window\"));\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let parent: string = 'render_window';\r\n    const width = document.getElementById(parent).offsetWidth;\r\n    const height = document.getElementById(parent).offsetHeight;\r\n\r\n    this.renderer = new Renderer3D(width, height);\r\n    document.getElementById(parent).appendChild(this.renderer.getRenderer());\r\n    let that = this;\r\n\r\n    window.addEventListener('resize', function() {\r\n      that.renderer.setSize(document.getElementById(parent).offsetWidth, document.getElementById(parent).offsetHeight);\r\n    }, false);\r\n\r\n    window.addEventListener('click', function() {\r\n      if (that.getLegend()) {\r\n        that.toggleLegend();\r\n      }\r\n    }, false);\r\n\r\n    this.renderer.getRenderer().addEventListener('mouseup', function(e) {\r\n      if (e.button == 0) {\r\n        that.painting = false;\r\n      } else if (e.button == 2) {\r\n        that.deleting = false;\r\n      }\r\n    }, false);\r\n\r\n    this.raycast_plane.material.colorWrite = false;\r\n    this.raycast_plane.material.transparent = true;\r\n    this.renderer.getRenderer().addEventListener('mousedown', function(e) {\r\n\r\n      let set_pred = false;\r\n      if (that.prediction_mode) {\r\n        set_pred = true;\r\n        that.predictionMode();\r\n      }\r\n\r\n      if (e.button == 0) {  //perform left click action -> add\r\n        that.painting = true;\r\n        that.deleting = false;\r\n        that.check_addition();\r\n      } else if (e.button == 2) {  //perform right click action -> delete\r\n        that.deleting = true;\r\n        that.painting = false;\r\n        that.check_deletion();\r\n      }\r\n\r\n      if (set_pred && !that.prediction_mode) {\r\n        that.predictionMode();\r\n      }\r\n\r\n    }, false);\r\n\r\n    const geometry = new THREE.IcosahedronGeometry(0.025, 1);\r\n    const material = new THREE.MeshBasicMaterial({color: 0xff0000});\r\n    this.pointer = new THREE.Mesh(geometry, material);\r\n    this.scene.add(this.pointer);\r\n\r\n    const indicator_g = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n    const indicator_m = new THREE.MeshBasicMaterial({color: 0xff0000});\r\n    indicator_m.transparent = true;\r\n    indicator_m.opacity = 0.5;\r\n    this.indicator = new THREE.Mesh(indicator_g, indicator_m);\r\n\r\n    const geo = new THREE.EdgesGeometry(this.indicator.geometry);\r\n    const mat = new THREE.LineBasicMaterial({color: 0x000000, linewidth: 1});\r\n    let wireframe = new THREE.LineSegments(geo, mat);\r\n    wireframe.renderOrder = 1;\r\n    this.indicator.add(wireframe);\r\n\r\n\r\n    this.renderer.getRenderer().addEventListener('mousemove', function(e) {\r\n      const rect = that.renderer.getRenderer().getBoundingClientRect();\r\n      that.mouse.x = ((e.clientX - rect.left) / (rect.right - rect.left)) * 2 - 1;\r\n      that.mouse.y = -((e.clientY - rect.top) / (rect.bottom - rect.top)) * 2 + 1;\r\n\r\n      that.raycast_plane.quaternion.copy(that.renderer.getCamera().quaternion);\r\n\r\n      that.cursorUpdate();\r\n      let set_pred = false;\r\n\r\n      if (that.painting || that.deleting) {\r\n        if (that.prediction_mode) {\r\n          set_pred = true;\r\n          that.predictionMode();\r\n        }\r\n        if (that.painting) {\r\n          that.check_addition();\r\n        } else if (that.deleting) {\r\n          that.check_deletion();\r\n        }\r\n      }\r\n\r\n      if (set_pred && !that.prediction_mode) {\r\n        that.predictionMode();\r\n      }\r\n\r\n    }, false);\r\n\r\n    window.addEventListener('keydown', function(e) {\r\n      if (e.key == 'e') {\r\n        that.edit_mode = !that.edit_mode;\r\n        that.trackball.noZoom = that.edit_mode;\r\n      }\r\n    }, false);\r\n\r\n    window.addEventListener('wheel', function(e) {\r\n      if (that.edit_mode) {\r\n        var lookAtVector = new THREE.Vector3();\r\n        lookAtVector.x = that.pointer.position.x - that.renderer.getCamera().position.x;\r\n        lookAtVector.y = that.pointer.position.y - that.renderer.getCamera().position.y;\r\n        lookAtVector.z = that.pointer.position.z - that.renderer.getCamera().position.z;\r\n        lookAtVector = lookAtVector.normalize();\r\n        lookAtVector = lookAtVector.multiplyScalar(-1 * (Math.sign(e.deltaY) * 0.05));\r\n        that.raycast_plane.position.x += lookAtVector.x;\r\n        that.raycast_plane.position.y += lookAtVector.y;\r\n        that.raycast_plane.position.z += lookAtVector.z;\r\n      }\r\n      that.cursorUpdate();\r\n\r\n      if (that.painting) {\r\n        that.check_addition();\r\n      } else if (that.deleting) {\r\n        that.check_deletion();\r\n      }\r\n    }, false);\r\n\r\n\r\n    // this.helperGrid = new THREE.GridHelper(100, 1000, new THREE.Color(0x888888));\r\n    // this.helperGrid.position.z = 0.001;\r\n    // this.helperGrid.rotateOnAxis(new Vector3(1, 0, 0), 90 * Math.PI / 180);\r\n    this.trackball = new TrackballControls(this.renderer.getCamera(), this.renderer.getRenderer());\r\n    this.trackball.mouseButtons = {LEFT: THREE.MOUSE.MIDDLE, RIGHT: null, MIDDLE: null};\r\n    this.trackball.keys = [null, null, 'ShiftLeft'];\r\n    this.trackball.rotateSpeed = 2;\r\n\r\n    this.scene_reload();\r\n    this.animate();\r\n\r\n    // this.renderer.getRenderer().addEventListener('wheel', function(){\r\n    //   that.showGrid();\r\n    // }, false);\r\n\r\n  }\r\n\r\n  private cursorUpdate() {\r\n    const intersects = this.raycaster.intersectObject(this.raycast_plane);\r\n    if (intersects.length != 0) {\r\n      this.pointer.position.x = intersects[0].point.x;\r\n      this.pointer.position.y = intersects[0].point.y;\r\n      this.pointer.position.z = intersects[0].point.z;\r\n    }\r\n\r\n    let preview_pos = this.generateCellPosition();\r\n    this.indicator.position.x = preview_pos.x / 10 - Math.sign(preview_pos.x) * (this.indicator.geometry.parameters.width / 2);\r\n    this.indicator.position.y = preview_pos.y / 10 - Math.sign(preview_pos.y) * (this.indicator.geometry.parameters.height / 2);\r\n    this.indicator.position.z = preview_pos.z / 10 - Math.sign(preview_pos.z) * (this.indicator.geometry.parameters.depth / 2);\r\n\r\n  }\r\n\r\n  private check_addition() {\r\n    const new_pos = this.generateCellPosition();\r\n    this.generate_cell(new_pos.x, new_pos.y, new_pos.z);\r\n    this.scene_reload();\r\n  }\r\n\r\n  private check_deletion() {\r\n    const new_pos = this.generateCellPosition();\r\n    this.grid.remove_from_grid(new_pos.x, new_pos.y, new_pos.z);\r\n    this.scene_reload();\r\n  }\r\n\r\n  generate_cell(x: number, y: number, z: number, auto: boolean = false, regenerate = true) {\r\n    const cell = new Cell3D(x, y, z, this.cell_color);\r\n    this.grid.add_to_grid(cell, auto);\r\n    if (regenerate) {\r\n      this.scene_reload();\r\n    }\r\n  }\r\n\r\n  private generateCellPosition(): THREE.Vector3 {\r\n    let x = this.pointer.position.x < 0 ? Math.trunc(this.pointer.position.x * 10) - 1 : Math.trunc(this.pointer.position.x * 10) + 1;\r\n    let y = this.pointer.position.y < 0 ? Math.trunc(this.pointer.position.y * 10) - 1 : Math.trunc(this.pointer.position.y * 10) + 1;\r\n    let z = this.pointer.position.z < 0 ? Math.trunc(this.pointer.position.z * 10) - 1 : Math.trunc(this.pointer.position.z * 10) + 1;\r\n    return new Vector3(x, y, z);\r\n  }\r\n\r\n  scene_reload() {\r\n    this.scene = new THREE.Scene();\r\n    this.scene.add(this.raycast_plane);\r\n\r\n    this.scene.add(this.pointer);\r\n    this.scene.add(this.indicator);\r\n    this.scene.background = this.bg_color;\r\n    const cells = this.grid.get_cells();\r\n    for (let c of cells) {\r\n      this.scene.add(c.getCell());\r\n    }\r\n  }\r\n\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n\r\n    this.raycaster.setFromCamera(this.mouse, this.renderer.getCamera());\r\n    this.trackball.update();\r\n\r\n    if (this.running) {\r\n      this.delta += this.clock.getDelta();\r\n      if (this.delta > this.interval) {\r\n        this.grid.advance();\r\n        this.nr_to_die = this.grid.getToDie().length;\r\n        this.nr_to_birth = this.grid.getToBirth().length;\r\n        this.scene_reload();\r\n        this.delta = this.delta % this.interval;\r\n      }\r\n    }\r\n    this.renderer.render(this.scene);\r\n  };\r\n\r\n\r\n  clear() {\r\n    this.grid.clear_grid();\r\n    this.scene_reload();\r\n  }\r\n\r\n  revert() {\r\n    this.grid.revert_grid();\r\n    this.scene_reload();\r\n  }\r\n\r\n  play() {\r\n    this.running = !this.running;\r\n  }\r\n\r\n  advance() {\r\n    if (!this.running) {\r\n      this.grid.advance();\r\n      this.scene_reload();\r\n    }\r\n    this.nr_to_die = this.grid.getToDie().length;\r\n    this.nr_to_birth = this.grid.getToBirth().length;\r\n  }\r\n\r\n  restore() {\r\n    this.grid.restore_grid();\r\n    this.scene_reload();\r\n  }\r\n\r\n  setMinSurvival(e) {\r\n    if (this.prediction_mode) {\r\n      this.predictionMode();\r\n      (document.getElementById('prediction_mode') as HTMLInputElement).checked = false;\r\n    }\r\n    this.min_survival = parseInt(e.target.value);\r\n    this.grid.setMinSurvival(this.min_survival);\r\n  }\r\n\r\n  setMaxSurvival(e) {\r\n    if (this.prediction_mode) {\r\n      this.predictionMode();\r\n      (document.getElementById('prediction_mode') as HTMLInputElement).checked = false;\r\n    }\r\n    this.max_survival = parseInt(e.target.value);\r\n    this.grid.setMaxSurvival(this.max_survival);\r\n  }\r\n\r\n  setBirth(e) {\r\n    if (this.prediction_mode) {\r\n      this.predictionMode();\r\n      (document.getElementById('prediction_mode') as HTMLInputElement).checked = false;\r\n    }\r\n    this.birth = parseInt(e.target.value);\r\n    this.grid.setBirth(this.birth);\r\n  }\r\n\r\n  setRevert(e) {\r\n    this.grid.setRevert(e.target.value);\r\n  }\r\n\r\n  getRevert() {\r\n    return this.grid.getRevert();\r\n  }\r\n\r\n  change_speed(e) {\r\n    this.interval = e.value / 10;\r\n  }\r\n\r\n  getLiveCount() {\r\n    return this.grid.get_cells().length;\r\n  }\r\n\r\n  sceneColor() {\r\n    let r = document.getElementById('bg_r').innerText;\r\n    let g = document.getElementById('bg_g').innerText;\r\n    let b = document.getElementById('bg_b').innerText;\r\n    this.bg_color = new THREE.Color('rgb(' + r + ',' + g + ',' + b + ')');\r\n    this.scene_reload();\r\n  }\r\n\r\n  cellColor() {\r\n    let r = document.getElementById('c_r').innerText;\r\n    let g = document.getElementById('c_g').innerText;\r\n    let b = document.getElementById('c_b').innerText;\r\n    this.cell_color = new THREE.Color('rgb(' + r + ',' + g + ',' + b + ')');\r\n    this.grid.cellColor(this.cell_color);\r\n    this.scene_reload();\r\n  }\r\n\r\n  predictionMode() {\r\n    this.bg_color = new THREE.Color(0x000000);\r\n    this.cell_color = new THREE.Color(0xffc107);\r\n    this.grid.cellColor(this.cell_color);\r\n    this.prediction_mode = !this.prediction_mode;\r\n    this.grid.predictionMode();\r\n    this.scene_reload();\r\n  }\r\n\r\n  toggleLegend() {\r\n    this.legend = !this.legend;\r\n  }\r\n\r\n  getLegend() {\r\n    return this.legend;\r\n  }\r\n\r\n  inputMesh() {\r\n    document.getElementById('file_picker').click();\r\n  }\r\n\r\n  async loadMesh(e) {\r\n\r\n    let file = URL.createObjectURL((e.currentTarget as HTMLInputElement).files[0]);\r\n\r\n    const loader = new OBJLoader();\r\n    const that = this;\r\n\r\n    loader.load(\r\n      file,\r\n      function(object) {\r\n        that.clear();\r\n        const box = new THREE.Box3();\r\n        for (let i = 0; i < object.children.length; i++) {\r\n          const mesh = (object.children[i] as THREE.Mesh);\r\n          mesh.geometry.computeBoundingBox();\r\n          box.copy(mesh.geometry.boundingBox).applyMatrix4(mesh.matrixWorld);\r\n          let size = new Vector3();\r\n          box.getSize(size);\r\n\r\n          let move_by = new Vector3(-size.x / 2, -size.y / 2, -size.z / 2);\r\n          move_by = move_by.subVectors(move_by, box.min);\r\n\r\n          mesh.position.x += move_by.x;\r\n          mesh.position.y += move_by.y;\r\n          mesh.position.z += move_by.z;\r\n          mesh.updateMatrixWorld();\r\n\r\n          const step = 0.1;\r\n          let intersects = [];\r\n\r\n          for (let x = -size.x / 2; x <= size.x / 2; x += step) {\r\n            for (let z = -size.z / 2; z <= size.z / 2; z += step) {\r\n              let caster = new Raycaster(new Vector3(x, size.y, z), new Vector3(0, -1, 0));\r\n              intersects = [...intersects, ...caster.intersectObject(mesh)];\r\n              caster = new Raycaster(new Vector3(x, -size.y, z), new Vector3(0, 1, 0));\r\n              intersects = [...intersects, ...caster.intersectObject(mesh)];\r\n            }\r\n          }\r\n          for (let x = -size.x / 2; x <= size.x / 2; x += step) {\r\n            for (let y = -size.y / 2; y <= size.y / 2; y += step) {\r\n              let caster = new Raycaster(new Vector3(x, y, size.z), new Vector3(0, 0, -1));\r\n              intersects = [...intersects, ...caster.intersectObject(mesh)];\r\n              caster = new Raycaster(new Vector3(x, y, -size.z), new Vector3(0, 0, 1));\r\n              intersects = [...intersects, ...caster.intersectObject(mesh)];\r\n            }\r\n          }\r\n          for (let z = -size.z / 2; z <= size.z / 2; z += step) {\r\n            for (let y = -size.y / 2; y <= size.y / 2; y += step) {\r\n              let caster = new Raycaster(new Vector3(size.x, y, z), new Vector3(-1, 0, 0));\r\n              intersects = [...intersects, ...caster.intersectObject(mesh)];\r\n              caster = new Raycaster(new Vector3(-size.x, y, z), new Vector3(1, 0, 0));\r\n              intersects = [...intersects, ...caster.intersectObject(mesh)];\r\n            }\r\n          }\r\n\r\n          if (intersects.length > 0) {\r\n            for (let i of intersects) {\r\n              let p = i.point;\r\n              let pos_x = p.x < 0 ? Math.trunc(p.x * 10) - 1 : Math.trunc(p.x * 10) + 1;\r\n              let pos_y = p.y < 0 ? Math.trunc(p.y * 10) - 1 : Math.trunc(p.y * 10) + 1;\r\n              let pos_z = p.z < 0 ? Math.trunc(p.z * 10) - 1 : Math.trunc(p.z * 10) + 1;\r\n              that.generate_cell(pos_x, pos_y, pos_z, false, false);\r\n            }\r\n          }\r\n\r\n          that.scene_reload();\r\n          // that.scene.add(mesh);\r\n        }\r\n\r\n\r\n      }\r\n      ,\r\n      function(xhr) {\r\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n      }\r\n      ,\r\n      function(error) {\r\n        console.log('An error happened');\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div id=\"render_window\" style=\"cursor: none\"></div>\r\n<div  id=\"legend\">\r\n  <button (click)=\"toggleLegend(); $event.stopPropagation()\" style=\"z-index: 1000\" mat-raised-button cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\">\r\n    Guide\r\n  </button>\r\n  <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"trigger\" [cdkConnectedOverlayOpen]=\"getLegend()\">\r\n    <div id=\"legend_content\">\r\n      <p id=\"overpopulation\">This cell will die due to overpopulation</p>\r\n      <p id=\"underpopulation\">This cell will die due to underpopulation</p>\r\n      <p id=\"birth\">This cell will be born due to reproduction</p>\r\n      <p id=\"survival\">This cell survives, unaffected</p>\r\n      <hr>\r\n      <p>In this experimental section, Conway's Game of Life has been extended by one dimension.<br> Here, you can examine how the automaton would behave inside a 3D environment.\r\n      In the options panel,<br> you will find almost all the options familiar to you from the 2D sandbox.<br> Additionally, you can upload 3D mesh data, that will be automatically\r\n      converted into a starting configuration for the 3D Game of Life. <br> Try not to use meshes that are too big, as in such cases, the upload takes a while. <br>The 3D cursor indicates where you will place/remove a cell.</p>\r\n      <hr>\r\n      <p><b>Left mouse button</b> -> Place a new cell</p>\r\n      <p><b>Right mouse button</b> -> Delete an existing cell</p>\r\n      <p><b>E</b> -> Edit mode toggle, allows you to change the distance of the cursor from the camera</p>\r\n      <p><b>Middle mouse button</b> -> Scroll to zoom, hold to rotate</p>\r\n      <p><b>Shift + Middle mouse button</b> -> Pan the camera</p>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n<div class=\"controls_container\">\r\n  <div id=\"controls\" (click)=\"$event.stopPropagation()\">\r\n    <button mat-icon-button color=\"primary\" (click)=\"clear()\" matTooltip=\"Clear the Game board\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        close\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"revert()\" [disabled]=\"running\" matTooltip=\"Go back by one epoch\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        skip_previous\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"play()\" matTooltip=\"Play/Pause the Game\" matTooltipPosition=\"above\">\r\n      <mat-icon *ngIf=\"!running\">\r\n        play_arrow\r\n      </mat-icon>\r\n      <mat-icon *ngIf=\"running\">\r\n        pause\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"advance()\" [disabled]=\"running\" matTooltip=\"Advance the game by one epoch\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        skip_next\r\n      </mat-icon>\r\n    </button>\r\n    <button mat-icon-button color=\"primary\" (click)=\"restore()\" [disabled]=\"running\" matTooltip=\"Restore the cleared board\" matTooltipPosition=\"above\">\r\n      <mat-icon>\r\n        replay\r\n      </mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<mat-drawer-container id=\"options_container\">\r\n  <div id=\"options_button\">\r\n    <div id=\"expand_options\">\r\n      <button type=\"button\" class=\"selection_button\" mat-icon-button (click)=\"options.toggle()\" style=\"width: 1em\">\r\n        <mat-icon>keyboard_arrow_left</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <mat-drawer #options class=\"sidenav_drawer\" id=\"options_drawer\" (click)=\"$event.stopPropagation()\" mode=\"side\" position=\"end\">\r\n    <div class=\"sidebar\" id=\"sidebar_options\">\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Living cells</p>\r\n        <p>{{getLiveCount()}}</p>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Cells born</p>\r\n        <p>{{nr_to_birth}}</p>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Cells died</p>\r\n        <p>{{nr_to_die}}</p>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Min # of cells for survival</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"0\" max=\"{{max_survival}}\" matInput value=\"{{min_survival}}\" (change)=\"setMinSurvival($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Max # of cells for survival</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"{{min_survival}}\" max=\"26\" matInput value=\"{{max_survival}}\" (change)=\"setMaxSurvival($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\"># of cells for birth</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"1\" max=\"26\" matInput value=\"{{birth}}\" (change)=\"setBirth($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Prediction mode</p>\r\n        <mat-checkbox id=\"prediction_mode\" [checked]=\"prediction_mode\" (change)=\"predictionMode()\" class=\"example-margin\" color=\"primary\"></mat-checkbox>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Simulation interval</p>\r\n        <mat-slider color=\"primary\" min=\"0.1\" max=\"10\" step=\"0.1\" thumbLabel value=\"{{interval * 10}}\" (change)=\"change_speed($event)\"></mat-slider>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Limit of returns</p>\r\n        <mat-form-field class=\"options_input\">\r\n          <label>\r\n            <input type=\"number\" min=\"1\" matInput id=\"revert_count\" value=\"{{getRevert()}}\" (change)=\"setRevert($event)\">\r\n          </label>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Background color</p>\r\n        <div class=\"color_sliders\">\r\n          <div class=\"option_box\">\r\n            R\r\n            <mat-slider id=\"bg_r\" (change)=\"sceneColor()\" value=\"{{bg_color.r * 255}}\" disabled=\"{{prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\" thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            G\r\n            <mat-slider id=\"bg_g\" (change)=\"sceneColor()\" value=\"{{bg_color.g * 255}}\" disabled=\"{{prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\" thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            B\r\n            <mat-slider id=\"bg_b\" (change)=\"sceneColor()\" value=\"{{bg_color.b * 255}}\" disabled=\"{{prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\" thumbLabel vertical></mat-slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">Cell color</p>\r\n        <div class=\"color_sliders\">\r\n          <div class=\"option_box\">\r\n            R\r\n            <mat-slider id=\"c_r\" (change)=\"cellColor()\" value=\"{{cell_color.r * 255}}\" disabled=\"{{prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\" thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            G\r\n            <mat-slider id=\"c_g\" (change)=\"cellColor()\" value=\"{{cell_color.g * 255}}\" disabled=\"{{prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\" thumbLabel vertical></mat-slider>\r\n          </div>\r\n          <div class=\"option_box\">\r\n            B\r\n            <mat-slider id=\"c_b\" (change)=\"cellColor()\" value=\"{{cell_color.b * 255}}\" disabled=\"{{prediction_mode}}\" color=\"primary\" min=\"0\" max=\"255\" step=\"1\" thumbLabel vertical></mat-slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"option_box\">\r\n        <p class=\"option_name\">File input</p>\r\n        <input type=\"file\" style=\"display: none\" id=\"file_picker\" (change)=\"loadMesh($event)\">\r\n        <button type=\"button\" (click)=\"inputMesh()\" mat-raised-button style=\"margin-bottom: 2.5em\">Choose File</button>\r\n      </div>\r\n    </div>\r\n  </mat-drawer>\r\n</mat-drawer-container>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {Life2DComponent} from './components/Life2D/Life2D.component';\r\nimport {Life3DComponent} from './components/Life3D/Life3D.component';\r\nimport {TourOfLifeComponent} from './components/TourOfLife/TourOfLife.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/life2d', pathMatch: 'full'},\r\n  {path: 'life2d', component: Life2DComponent},\r\n  {path: 'life2d/:config', component: Life2DComponent},\r\n  {path: 'life3d', component: Life3DComponent},\r\n  {path: 'tour-of-life', component: TourOfLifeComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}